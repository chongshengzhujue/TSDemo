{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\viewCtrl\\LogoView/assets\\scripts\\viewCtrl\\LogoView\\LogoViewLogic.ts"],"names":[],"mappings":";;;;;AACM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAE1C,yDAAoD;AAIpD,yDAAoD;AACpD,8CAAyC;AAKzC,IAAI,OAAO,GAAS,EAAG,CAAC,OAAO,CAAC;AAGhC;IAA+C,qCAAa;IAD5D;QAAA,qEA2GC;QAvGG,WAAK,GAAY,IAAI,CAAC;QAGtB,aAAO,GAAc,IAAI,CAAC;QAG1B,qBAAe,GAAc,IAAI,CAAC;QAGlC,eAAS,GAAa,IAAI,CAAC;;IA8F/B,CAAC;IA5FG,kCAAM,GAAN;QAEI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YAC5B,EAAE,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEf,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YAC5B,EAAE,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,sCAAsC;IACtC,mCAAO,GAAP;QAEI,EAAE,CAAA,CAAO,IAAI,CAAC,IAAK,CAAC,QAAQ,CAAC,CAC7B,CAAC;YACG,IAAI,CAAC,QAAQ,GAAS,IAAI,CAAC,IAAK,CAAC,QAAQ,CAAC;QAC9C,CAAC;QACD,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,GAAG,eAAe,CAAC,CAAC;QAErD,6EAA6E;QAC7E,iEAAiE;QACjE,KAAK;QAEL,gDAAgD;QAChD,iCAAiC;QAEjC,+BAA+B;QAE/B,6BAA6B;QAC7B,yCAAyC;QACzC,gDAAgD;QAEhD,4DAA4D;QAC5D,wEAAwE;QACxE,8BAA8B;QAC9B,IAAI;QACJ,6CAA6C;QAC7C,+BAA+B;QAC/B,8DAA8D;QAE9D,uCAAuC;QACvC,IAAI;QACJ,4BAA4B;QAE5B,sBAAY,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAC,cAAc,EAAC,CAAC,OAAO,EAAC,SAAS,EAAC,GAAG,CAAC,CAAC,CAAC;QAE7E,IAAI,CAAC,UAAU,EAAE,CAAA;QAEjB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,uCAAuC;IACvC,kCAAM,GAAN;IAGA,CAAC;IAED,4CAA4C;IAC5C,sCAAU,GAAV,UAAW,GAAU,EAAC,IAAQ;IAG9B,CAAC;IAED,sCAAU,GAAV;QAEI,EAAE,CAAA,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CACzB,CAAC;YACG,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YACjC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC;YAErB,IAAI,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC7B,QAAQ,CAAC,SAAS,CAAE,SAAS,CAAC,CAAC;QACnC,CAAC;IACL,CAAC;IAED,2CAAe,GAAf,UAAgB,KAAK;QAEjB,6BAA6B;QAC7B,8CAA8C;QAE9C,+DAA+D;QAE/D,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAED,yCAAa,GAAb;QACI,IAAI,SAAS,GAAkB,qBAAW,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnJ,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;QAChD,IAAI,UAAU,GAA4C,SAAS,CAAC,cAAe,CAAC;QACpF,UAAU,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC;IAtGD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;oDACG;IAGtB;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;sDACM;IAG1B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;8DACc;IAGlC;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;wDACQ;IAZV,iBAAiB;QADrC,OAAO;OACa,iBAAiB,CA0GrC;IAAD,wBAAC;CA1GD,AA0GC,CA1G8C,uBAAa,GA0G3D;kBA1GoB,iBAAiB","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\viewCtrl\\LogoView","sourcesContent":["\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nimport UserComponent from \"./../base/UserComponent\";\r\nimport TestVO from \"../../object/vo/userVO/TestVO\";\r\nimport ObjectManager from \"../../object/ObjectManager\";\r\nimport TestModel from \"../../object/model/userModel/TestModel\";\r\nimport Localization from \"../../tools/Localization\";\r\nimport ViewManager from \"../ViewManager\";\r\nimport BasicViewCtrl from \"../Base/BasicViewCtrl\";\r\nimport TestTableViewLogic from \"../TestTableView/TestTableViewLogic\";\r\nimport NetworkManager from \"../../network/NetworkManager\";\r\n\r\nlet talefun = (<any>cc).talefun;\r\n\r\n@ccclass\r\nexport default class TemplateViewLogic extends UserComponent {\r\n\r\n    @property(cc.Label)\r\n    label:cc.Label = null;\r\n\r\n    @property(cc.Sprite)\r\n    imgLogo: cc.Sprite = null;\r\n\r\n    @property(cc.Prefab)\r\n    tableViewPrefab: cc.Prefab = null;\r\n\r\n    @property(cc.Label)\r\n    tempLabel: cc.Label = null;\r\n\r\n    onLoad()\r\n    {\r\n        cc.game.on(cc.game.EVENT_SHOW, (function() {\r\n            cc.log(\"===============================on show 1\");\r\n        }).bind(this));\r\n\r\n        cc.game.on(cc.game.EVENT_HIDE, (function() {\r\n            cc.log(\"===============================on hide 2\");\r\n        }).bind(this));\r\n    }\r\n\r\n    // 继承 UserComponent， 当组件的node open时 调用\r\n    onEnter()\r\n    {\r\n        if((<any>this.node).viewCtrl)\r\n        {\r\n            this.viewCtrl = (<any>this.node).viewCtrl;\r\n        }\r\n        talefun.LogHelper.log(\"onEnter :\" + \"LogoViewLogic\");\r\n\r\n        // talefun.TemplateManager.getTemplateList([\"template\",\"project\"],function(){\r\n        //     talefun.LogHelper.log(\"test load template list success \");\r\n        // })\r\n\r\n        // let str = JSON.stringify([\"hello\",\" world\"]);\r\n        // // talefun.LogHelper.log(str);\r\n\r\n        // talefun.LogHelper.logW(str);\r\n\r\n        // let testVO = new TestVO();\r\n        // testVO.setProperties({id:1,coin:100});\r\n        // talefun.LogHelper.log(testVO.getFormatStr());\r\n\r\n        // let objectManager = <ObjectManager>talefun.ObjectManager;\r\n        // let testModel = <TestModel>objectManager.getModelByName(\"testModel\");\r\n        // for(let i = 1 ; i < 3; i++)\r\n        // {\r\n        //     let key = testModel.testKeyPrefix + i;\r\n        //     let item = new TestVO();\r\n        //     item.parseData({id:100 + i,level:50 *i, coin:1000 * i})\r\n\r\n        //     testModel.setTestItem(key,item);\r\n        // }\r\n        // testModel.saveTestList();\r\n\r\n        Localization.setLabelText(this.label,\"{#1}{#2}{#3}\",[\"Hello\",\" World!\",120]);\r\n\r\n        this.logoMotion()\r\n\r\n        this.showTableView();\r\n    }\r\n\r\n    // 继承 UserComponent， 当组件的node close时 调用\r\n    onExit()\r\n    {\r\n\r\n    }\r\n\r\n    // 继承 UserComponent， 当组件的node 作为 item 时 更新调用\r\n    updateView(idx:number,data:any)\r\n    {\r\n\r\n    }\r\n    \r\n    logoMotion()\r\n    {\r\n        if(this.imgLogo !== null)\r\n        {\r\n            let logoNode = this.imgLogo.node;\r\n            logoNode.opacity = 0;\r\n\r\n            let actFadeIn = cc.fadeIn(2);\r\n            logoNode.runAction( actFadeIn);\r\n        }\r\n    }\r\n\r\n    onClickBtnClose(event)\r\n    {\r\n        // let target = event.target;\r\n        // talefun.AudioManager.playBtnEffect(target);\r\n\r\n        // NetworkManager.getInstance().httpClient['updateUserInfo']();\r\n\r\n        cc.director.loadScene(\"TestScene\");\r\n    }\r\n\r\n    showTableView() {\r\n        let tableView: BasicViewCtrl = ViewManager.getInstance().showPrefab(this.tableViewPrefab.name, this.tableViewPrefab, {}, this.node, this.viewCtrl);\r\n        tableView.rootView.setPosition(cc.p(100, 1200));\r\n        let tableLogic: TestTableViewLogic = (<TestTableViewLogic>tableView.logicComponent);\r\n        tableLogic.reloadData();\r\n    }\r\n}"]}