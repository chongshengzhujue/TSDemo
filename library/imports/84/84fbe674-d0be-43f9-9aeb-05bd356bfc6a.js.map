{"version":3,"sources":["../../../../../assets/scripts/viewCtrl/assets/scripts/viewCtrl/ViewManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/scripts/viewCtrl","sourcesContent":["// ViewManager ，用于管理View 打开和关闭，资源释放管理\n//2018.01.10 li.xiao\n\nimport BasicViewCtrl from \"./Base/BasicViewCtrl\";\n\nlet talefun = (<any>cc).talefun;\n\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ViewManager {\n    __instanceId:any = null;\n    viewStack = [];\n    resCache:{deps:{},imageCache:{}} = {deps:{},imageCache:{}};  \n    clearUnusedResCallBack:any = null;\n    static _instance:ViewManager = null;\n\n    private constructor(){\n        this.__instanceId = (<any>cc).ClassManager.getNewInstanceId();\n    }\n\n    showView(viewName:string,data:any,ViewClass:any){\n\n        if(viewName &&  typeof(viewName) == \"string\" )\n        {\n            talefun.LogHelper.log(\"load view\" + viewName);\n            \n            cc.loader.loadRes(\"prefab/view/\" + viewName,function(error,prefab)\n            {\n                \n                if (!error)\n                {\n                    // talefun.LogHelper.log(\"******load ******\" + error);\n                    // var ViewCtrl = require(ViewClass);\n                    let viewCtrl = null;\n                    if (ViewClass && typeof(ViewClass) == \"string\")\n                    {\n                        // var ViewCtrl = require(ViewClass);\n                        // viewCtrl = new ViewCtrl();\n                    }\n                    else\n                    {\n                        viewCtrl = new BasicViewCtrl();\n                    }\n                    \n                    viewCtrl.prefabName = viewName;\n                    viewCtrl.openView(prefab,data);\n                    \n                    //增加View 依赖缓存\n                    let deps = cc.loader.getDependsRecursively('prefab/view/' + viewName);\n                    viewCtrl.resCache.deps = deps;\n                    this.retainDeps(deps);\n                    // var uuid = cc.loader._getResUuid('ui/' + \"atlas\",cc.Texture2D);\n                    // var uuids = cc.loader._resources.getUuidArray('ui/' + \"atlas\",cc.SpriteFrame)\n                    // for(var key in uuids)\n                    // {\n                    //     talefun.LogHelper.log(\"uuids key : \" + key + \" value : \" + uuids[key] + \" referKey : \" + cc.loader._getReferenceKey(uuids[key]));\n                    // }\n                    // talefun.LogHelper.log(\"uuid : \" + uuid + \" referKey : \" + cc.loader._getReferenceKey(uuid));\n                    // for(var key in deps)\n                    // {\n                    //     talefun.LogHelper.log(\"key : \" + key + \", value : \" + deps[key] + \" referKey : \" + cc.loader._getReferenceKey(deps[key]));\n                    // }\n\n                    // talefun.LogHelper.log(\"cache info\")\n                    // for(var key in cc.loader._cache)\n                    // {\n                    //     talefun.LogHelper.log(\"cache key : \" + key);\n                    // }\n                }\n                else\n                {\n                    talefun.LogHelper.log(\"************\" + error);\n                }\n            }.bind(this))\n        }\n    }\n\n    showPrefab(prefabName:string,prefab:cc.Prefab,data:any,parent:cc.Node,parentViewCtrl:BasicViewCtrl)\n    {\n        talefun.LogHelper.log(\"showPrefabPreLoad\" + parentViewCtrl);\n        if (prefabName && prefab && parent && parentViewCtrl)\n        {\n            talefun.LogHelper.log(\"showPrefab\")\n            let viewCtrl = null;\n            // let ViewClass = ViewClass;\n            if (null)//(ViewClass && typeof(ViewClass) == \"string\")\n            {\n                // var ViewCtrl = require(ViewClass);\n                // viewCtrl = new ViewCtrl();\n            }\n            else\n            {\n                viewCtrl = new BasicViewCtrl();\n            }\n            \n            viewCtrl.prefabName = prefabName;\n            return viewCtrl.openView(prefab,data,parent,parentViewCtrl);\n        }\n    }\n\n    pushView(viewCtrl:BasicViewCtrl)\n    {\n        if (viewCtrl && viewCtrl instanceof BasicViewCtrl)\n        {\n            talefun.LogHelper.log(\"****** push view *********  \" + viewCtrl.prefabName)\n            this.viewStack.push(viewCtrl);\n\n            if ((<any>viewCtrl).isFullScene())\n            {\n                talefun.LogHelper.log(\"stack length :\" + this.viewStack.length);\n                if (this.viewStack.length == 1)\n                {\n                    viewCtrl.setVisible(true);\n                    return;\n                }\n                for(let i = this.viewStack.length -2;i >=0;i--)\n                {\n                    let tempCtrl = this.viewStack[i];\n                    tempCtrl.setVisible(false);\n                }\n            }\n        }\n    }\n\n    popView(viewCtrl:BasicViewCtrl)\n    {\n        if (viewCtrl && viewCtrl instanceof BasicViewCtrl)\n        {\n            talefun.LogHelper.log(\"****** pop view *********  \" + viewCtrl.prefabName)\n\n            for(let i = this.viewStack.length -1;i >=0;i--)\n            {\n                if(this.viewStack[i] == viewCtrl)\n                {\n                    this.viewStack.splice(i,1);\n                    talefun.LogHelper.log(\"pop View : \" + viewCtrl.prefabName)\n                    break;\n                }\n            }\n\n            for(let i = this.viewStack.length -1;i >=0;i--)\n            {\n                let tempCtrl = this.viewStack[i];\n                tempCtrl.setVisible(true);\n                if (tempCtrl.isFullScene())\n                {\n                    break;\n                }\n            }\n\n            this.clearUnusedResCallBack = function()\n            {\n                this.clearUnusedRes();\n                cc.director.getScheduler().unschedule(this.clearUnusedResCallBack,this);\n                this.clearUnusedResCallBack = null;\n            }\n\n            cc.director.getScheduler().schedule(this.clearUnusedResCallBack, this, 0, 0, 1, false);\n\n        }   \n    }\n    \n    retainDeps(deps:any)\n    {\n        if (deps && deps instanceof Array)\n        {\n            let len = deps.length;\n            let depsCache = this.resCache.deps;\n            for(var i = 0; i < len; i++)\n            {\n                if(depsCache[deps[i]])\n                {\n                    depsCache[deps[i]] = depsCache[deps[i]] + 1;\n                }\n                else\n                {\n                    depsCache[deps[i]] = 1;\n                }\n                talefun.LogHelper.log(\"retainDeps : \" +  deps[i]);\n            }\n        }\n    }\n\n    releaseDeps(deps:any)\n    {\n        if (deps && deps instanceof Array)\n        {\n            let len = deps.length;\n            let depsCache = this.resCache.deps;\n            for(let i = 0; i < len; i++)\n            {\n                if(depsCache[deps[i]] && depsCache[deps[i]] > 0)\n                {\n                    depsCache[deps[i]] = depsCache[deps[i]] - 1;\n                }\n                else\n                {\n                    depsCache[deps[i]] = 0;\n                }\n                talefun.LogHelper.log(\"releaseDeps : \" +  deps[i]);\n            }\n        }\n    }\n\n    retainImageCache(imagePath : any)\n    {\n        if (imagePath)\n        {\n            let imageCache = this.resCache.imageCache;\n            if (imagePath instanceof Array)\n            {\n                let len = imagePath.length;\n                for(let i = 0; i < len; i++)\n                {\n                    let subPath = imagePath[i];\n                    this.retainImageCache(subPath);\n                }\n            }\n            else\n            {\n                if (imageCache[imagePath])\n                {\n                    imageCache[imagePath] = imageCache[imagePath] + 1;\n                }\n                else\n                {\n                    imageCache[imagePath] = 1;\n                }\n                talefun.LogHelper.log(\"retainImageCache : \" +  imagePath);\n            }\n        }\n    }\n\n    releaseImageCache(imagePath:any)\n    {\n        if (imagePath)\n        {\n            let imageCache = this.resCache.imageCache;\n            if (imagePath instanceof Array)\n            {\n                let len = imagePath.length;\n                for(let i = 0; i < len; i++)\n                {\n                    let subPath = imagePath[i];\n                    this.releaseImageCache(subPath);\n                }\n            }\n            else\n            {\n                if (imageCache[imagePath] && imageCache[imagePath] > 0)\n                {\n                    imageCache[imagePath] = imageCache[imagePath] - 1;\n                }\n                else\n                {\n                    imageCache[imagePath] = 0;\n                }\n                talefun.LogHelper.log(\"releaseImageCache : \" +  imagePath);\n            }\n        }\n    }\n\n    clearUnusedRes()\n    {\n        talefun.LogHelper.log(\"******* clearUnusedRes ********\")\n        let depsCache = this.resCache.deps;\n        let imageCache = this.resCache.imageCache;\n\n        //清理View依赖资源\n        let tempDepsKeyList = [];\n        for(let key in depsCache)\n        {\n            if (depsCache[key] == 0)\n            {\n                cc.loader.release(key);\n                tempDepsKeyList.push(key);\n                talefun.LogHelper.log(\"clearUnusedRes deps : \" +  key);\n            }\n        }\n\n        //清除已删除缓存记录\n        for(var i = 0 ; i < tempDepsKeyList.length; i++)\n        {\n            let key = tempDepsKeyList[i];\n            delete depsCache[key];\n        }\n        tempDepsKeyList.splice(0,tempDepsKeyList.length);\n\n        //清理View 动态加载imgae 资源\n        let tempImageKeyList = [];\n        for(let key in imageCache)\n        {\n            if(imageCache[key] == 0)\n            {\n                tempImageKeyList.push(key);\n                //释放 image frame缓存\n                let uuidFrames = (<any>cc.loader)._resources.getUuidArray(key,cc.SpriteFrame)\n\n                if (uuidFrames && uuidFrames instanceof Array)\n                {\n                    for(let index in uuidFrames)\n                    {\n                        cc.loader.release(uuidFrames[index]);\n                    }\n                }\n\n                //释放 image Atlas缓存\n                let uuisAtlas = (<any>cc.loader)._getResUuid('ui/' + \"atlas\",cc.SpriteAtlas);\n                cc.loader.release(uuisAtlas);\n\n                //释放 image textrue缓存\n                let uuidTexture = (<any>cc.loader)._getResUuid('ui/' + \"atlas\",cc.Texture2D);\n                cc.loader.release(uuidTexture);\n\n                talefun.LogHelper.log(\"clearUnusedRes imageCache : \" +  key);\n            }\n        }\n\n        //清除已删除缓存记录\n        for(let i = 0 ; i < tempImageKeyList.length; i++)\n        {\n            let key = tempImageKeyList[i];\n            delete imageCache[key];\n        }\n        tempImageKeyList.splice(0,tempImageKeyList.length);\n\n        cc.sys.garbageCollect();\n    }\n\n    static getInstance():ViewManager\n    {\n        if(ViewManager._instance == null)\n        {\n            ViewManager._instance = new ViewManager();\n        }\n        return ViewManager._instance;\n    }\n}\n"]}