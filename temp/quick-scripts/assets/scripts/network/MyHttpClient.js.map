{"version":3,"sources":["MyHttpClient.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\network","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\nlet HttpConst = require(\"./HttpConst\");\r\nimport {RequestData, ServerConfig, PackageInfo, CodeConst} from \"./HttpType\";\r\nimport HttpNetwork from \"./MyHttpNetwork\";\r\n\r\n@ccclass\r\nexport default class MyHttpClient {\r\n    static readonly LOCAL_SERVER = 0;\r\n    static readonly CN_SERVER = 1;\r\n    static readonly US_SERVER = 2;\r\n    static readonly US_STG_SERVER = 3;\r\n\r\n    SERVER_CONFIGS: ServerConfig[] = [];\r\n\r\n    _serverType: number = MyHttpClient.LOCAL_SERVER;\r\n    _callback: Function;\r\n    _beginCallback: Function;\r\n    _requestQueue: RequestData[] = [];\r\n    _nal: HttpNetwork;\r\n\r\n    constructor(beginCallback: Function, callback: Function, serverType: number, packgeInfo: PackageInfo) {\r\n        this.SERVER_CONFIGS[0] = {\r\n            ID : \"NJIXLdTtsFjqqm4UlcTeJ1A1-gzGzoHsz\",\r\n            KEY : \"xnpj2Cd1oWH7Vhu47OR9uIuE\",\r\n            SERVER : \"http://192.168.0.249:3000\",\r\n        };\r\n        this.SERVER_CONFIGS[1] = {\r\n            ID : \"NJIXLdTtsFjqqm4UlcTeJ1A1-gzGzoHsz\",\r\n            KEY : \"xnpj2Cd1oWH7Vhu47OR9uIuE\",\r\n            SERVER : \"https://api.leancloud.cn\",\r\n        };\r\n        this.SERVER_CONFIGS[2] = {\r\n            ID : \"BvPLKBoCJ9EfN2CUwjeRuddC-MdYXbMMI\",\r\n            KEY : \"TK3jjAwXG9kjoYy0RGcR6SLF\",\r\n            SERVER : \"https://us-api.leancloud.cn\",\r\n        };\r\n        this.SERVER_CONFIGS[3] = {\r\n            ID : \"CdfVxNwi50pWQ9whlLSXCnrh-MdYXbMMI\",\r\n            KEY : \"hqe16ogoDi6FOT3GziI5Jilc\",\r\n            SERVER : \"https://us-api.leancloud.cn\",\r\n            PREPARE : true,\r\n        };\r\n\r\n        this._serverType = serverType;\r\n        this._callback = callback;\r\n        this._beginCallback = beginCallback;\r\n        let config: ServerConfig = this.SERVER_CONFIGS[serverType];\r\n        cc.log(\"ServerType = %d \", serverType);\r\n        let serverUrl: string = config.SERVER;\r\n        let appID: string = config.ID;\r\n        let appKey: string = config.KEY;\r\n        this._nal = new HttpNetwork(serverUrl, appID, appKey, this._networkCallback.bind(this));\r\n        this._nal.packageInfo = packgeInfo;\r\n        this._nal.isPrepare = config.PREPARE != undefined ? config.PREPARE : false;\r\n        this.initAPIs();\r\n    }\r\n\r\n    public setSessionToken(token: string) {\r\n        this._nal.sessionToken = token;\r\n    }\r\n\r\n    public initAPIs() {\r\n        for (let k in HttpConst) {\r\n            let value = HttpConst[k];\r\n            this[k] = this.interface(value);\r\n        }\r\n    }\r\n\r\n    public set callback(handler: Function) {\r\n        this._callback = handler;\r\n    }\r\n\r\n    public set beginCallback(handler: Function) {\r\n        this._beginCallback = handler;\r\n    }\r\n\r\n    public loginCheck(): boolean {\r\n        if (this._nal.sessionIsChecked) {\r\n            return true;\r\n        }\r\n\r\n        if (this._nal.sessionToken === undefined) {\r\n            this._createNewRequest(HttpConst.loginWithDeviceId, {username : \"udid\", password : \"123456\"}, true);\r\n        } else {\r\n            this._createNewRequest(HttpConst.loginWithSession, {}, true);\r\n        }\r\n        this._beginRequest();\r\n        return false;\r\n    }\r\n\r\n    public getQueueWaitLen() : number {\r\n        let len = 0;\r\n        for (let k in this._requestQueue) {\r\n            let requestData = this._requestQueue[k];\r\n            if (requestData.wait === true) {\r\n                len++;\r\n            }\r\n        }\r\n\r\n        return len;\r\n    }\r\n    \r\n    private _insertNewRequest(apiTap: any, params, wait: boolean, id: string, index?: number) {\r\n        if (apiTap.token != undefined && this._nal.sessionToken === undefined) {\r\n            cc.log(\"需要增加账号密码登录的请求\");\r\n            this._createNewRequest(HttpConst.loginWithDeviceId, {username : \"udid\", password : \"123456\"});\r\n        } else if(apiTap.token != undefined && !this._nal.sessionIsChecked) {\r\n            cc.log(\"需要增加sessiontoken登录的请求\");\r\n            this._createNewRequest(HttpConst.loginWithSession, {});\r\n        }\r\n\r\n        this._createNewRequest(apiTap, params, wait, id, index);\r\n    }\r\n\r\n    public interface(apiTap: string, id?: string): Function {\r\n        return function(target, params, wait) {\r\n            params = params != undefined ? params : {};\r\n            this._insertNewRequest(apiTap, params, wait, id);\r\n            this._beginRequest();\r\n        }\r\n    }\r\n\r\n    private _createNewRequest(apiTap, params, wait?: boolean, id?: string, index?: number) {\r\n        if (wait == undefined) {\r\n            wait = apiTap.wait;\r\n        }\r\n\r\n        params._cloudApiVersion = apiTap.version != undefined ? apiTap.version : 1;\r\n        for(let k in this._requestQueue) {\r\n            let oldRequest = this._requestQueue[k];\r\n            if (oldRequest.path != undefined && oldRequest.path === apiTap.path) {\r\n                cc.log(\"已经存在的请求：%s\", oldRequest.path);\r\n                oldRequest.method = apiTap.method;\r\n                oldRequest.parameters = params;\r\n                oldRequest.wait = wait;\r\n                oldRequest.id = id;\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        let newRequest = {path : apiTap.path, method : apiTap.method, parameters : params, wait : wait, id : id, needToken : apiTap.token};\r\n        if (newRequest.path === HttpConst.loginWithDeviceId.path\r\n            || newRequest.path === HttpConst.loginWithSession.path) {\r\n                index = 0;\r\n        }\r\n\r\n        if (index != undefined) {\r\n            this._requestQueue.splice(index, 0, newRequest);\r\n        } else {\r\n            this._requestQueue[this._requestQueue.length] = newRequest;\r\n        }\r\n\r\n        cc.log(\"插入新的请求，队列长度%d\", this._requestQueue.length);\r\n    }\r\n\r\n    private _removeCompletedRequest(requestData: RequestData) {\r\n        for (let i = 0; i >= 0; i--) {\r\n            let oldRequest = this._requestQueue[i];\r\n            if (oldRequest.path === requestData.path) {\r\n                cc.log(\"完成请求：%s\", requestData.path);\r\n                this._requestQueue.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _beginRequest() : boolean {\r\n        let queueLen = this.getQueueWaitLen();\r\n        let requestLen = this._nal.getRequestLen();\r\n\r\n        if (queueLen > 0) {\r\n            if (this._beginCallback != undefined) {\r\n                this._beginCallback();\r\n            }\r\n            if (requestLen === 0) {\r\n                let requestData = this._requestQueue[0];\r\n                cc.log(\"发送请求：%s\", requestData.path);\r\n                //Analytice.onEvent(requestData.path, {timed=true})\r\n                let b = this._nal.request(requestData);\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private _networkCallback(code: number, data, request: RequestData) {\r\n        this._removeCompletedRequest(request);\r\n        //Analytice.endTimedEvent(request.path)\r\n        if (this._callback != undefined) {\r\n            this._callback(code, data, request);\r\n        }\r\n\r\n        this._beginRequest();\r\n    }\r\n}"]}