{"version":3,"sources":["BlockCellVo.ts"],"names":[],"mappings":";;;;;AACA,iDAA4C;AAE5C;IAAA;QAEI,YAAY;QACZ,WAAM,GAAY,CAAC,CAAC;QAEpB,gBAAgB;QAChB,cAAS,GAAa,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEjC,SAAS;QACT,gBAAW,GAAa,IAAI,CAAC;QAE7B,WAAW;QACX,gBAAW,GAAiB,IAAI,CAAC;QAEjC,OAAO;QACP,kBAAa,GAAY,IAAI,CAAC;QAE9B,qBAAqB;QACrB,mBAAc,GAAsB,IAAI,CAAC;QAEzC,SAAS;QACT,mBAAc,GAAY,CAAC,CAAC;IAiDhC,CAAC;IA/CG,qCAAe,GAAf,UAAgB,MAAc,EAAE,SAAkB,EAAE,aAAqB,EAAE,UAAoB;QAC3F,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,IAAI,SAAS,GAAY,uBAAa,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC;QAChE,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QACjE,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QAEhD,8CAA8C;QAC9C,4CAA4C;QAC5C,6CAA6C;QAC7C,2CAA2C;IAC/C,CAAC;IAED,oCAAc,GAAd,UAAe,SAAS;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAClD,CAAC;IACL,CAAC;IAED,iCAAW,GAAX,UAAY,GAAW;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACzC,CAAC;IACL,CAAC;IAED,iCAAW,GAAX,UAAY,OAAoB;QAC5B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,OAAO,CAAC,cAAc,EAAE,CAAC;IAC7B,CAAC;IAED,sCAAgB,GAAhB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC;IAEL,CAAC;IAED,gCAAU,GAAV;QACI,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;QAC/B,uBAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC5D,CAAC;IACL,kBAAC;AAAD,CAtEA,AAsEC,IAAA","file":"","sourceRoot":"../../../../../../assets/scripts/viewCtrl/GameView","sourcesContent":["import BlockSpriteLogic from \"./BlockSpriteLogic\";\nimport BlockNodePool from \"./BlockNodePool\";\n\nexport default class BlockCellVo {\n\n    //小块的index坐标\n    posIdx : number = 0;\n\n    //小块的x，y index坐标\n    posVecIdx : cc.Vec2 = cc.p(0, 0);\n\n    //小块的渲染目标\n    blockSprite : cc.Node = null;\n\n    //小块重叠的背景小块\n    linkBlcokVo : BlockCellVo = null;\n\n    //小块的类型\n    blockColorIdx : number = null;\n\n    //blockctrl的component\n    spriteComponet : BlockSpriteLogic = null;\n\n    //小块被占用次数\n    linkedBlockNum : number = 0;\n\n    initBlockSprite(posIdx: number, posVecIdx: cc.Vec2, blockColorIdx: number, parentNode : cc.Node) {\n        this.posIdx = posIdx;\n        this.posVecIdx = posVecIdx;\n        this.blockColorIdx = blockColorIdx;\n\n        let blockNode: cc.Node = BlockNodePool.getInstance().getBlock();\n        parentNode.addChild(blockNode);\n        this.blockSprite = blockNode;\n        this.spriteComponet = blockNode.getComponent(\"BlockSpriteLogic\");\n        this.spriteComponet.setColorById(blockColorIdx);\n\n        // let blockSize = blockNode.getContentSize();\n        // let posX = posVecIdx.x * blockSize.width;\n        // let posY = posVecIdx.y * blockSize.height;\n        // blockNode.setPosition(cc.p(posX, posY));\n    }\n\n    setMaskVisible(isVisible) {\n        if (this.spriteComponet) {\n            this.spriteComponet.setMaskVisible(isVisible);\n        }\n    }\n\n    setNumLabel(num: number) {\n        if (this.spriteComponet) {\n            this.spriteComponet.setNumLable(num);\n        }\n    }\n\n    linkBgBlock(bgBlock: BlockCellVo) {\n        this.linkBlcokVo = bgBlock;\n        bgBlock.linkedBlockNum++;\n    }\n\n    clearLinkBgBlock() {\n        if (this.linkBlcokVo) {\n            this.linkBlcokVo.linkedBlockNum--;        \n            this.linkBlcokVo = null;\n        }\n        \n    }\n\n    removeSelf() {\n        this.spriteComponet.setMaskVisible(false);\n        this.blockSprite.parent = null;\n        BlockNodePool.getInstance().pushBlock(this.blockSprite);\n    }\n}"]}