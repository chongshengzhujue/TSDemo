{"version":3,"sources":["BlockNodePool.ts"],"names":[],"mappings":";;;;;AAEA;IAQI;IAEA,CAAC;IAED,gCAAQ,GAAR,UAAS,WAAuB,EAAE,OAAgB;QAC9C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;QAChC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEjD,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC;YAC9B,IAAI,SAAS,GAAY,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YACrD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACtC,CAAC;IACL,CAAC;IAED,gCAAQ,GAAR;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,WAAS,GAAY,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC1D,EAAE,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAS,CAAC;QACrB,CAAC;QAED,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;QACxC,oCAAoC;QACpC,EAAE,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAED,iCAAS,GAAT,UAAU,SAAkB;QACxB,2BAA2B;QAC3B,sCAAsC;QACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAID;;;;OAIG;IACW,yBAAW,GAAzB;QAEI,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAClB,CAAC;YACG,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAC;QACxC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEM,+BAAO,GAAd;QACI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACzD,CAAC;IACL,oBAAC;AAAD,CA9DA,AA8DC,IAAA","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\viewCtrl\\GameView","sourcesContent":["\r\n\r\nexport default class BlockNodePool {\r\n\r\n    blockNodeArr : cc.Node[];\r\n\r\n    blockPrefab : cc.Prefab;\r\n\r\n    parentNode : cc.Node;\r\n\r\n    constructor() {\r\n        \r\n    }\r\n\r\n    initPool(blockPrefab : cc.Prefab, initNum : number) {\r\n        this.blockPrefab = blockPrefab;\r\n        this.blockNodeArr = new Array();\r\n        this.parentNode = new cc.Node();\r\n        cc.director.getScene().addChild(this.parentNode);\r\n\r\n        for(let i = 0; i < initNum; i++) {\r\n            let blockNode: cc.Node = cc.instantiate(blockPrefab);\r\n            this.blockNodeArr.push(blockNode);\r\n        }\r\n    }\r\n\r\n    getBlock(): cc.Node {\r\n        if (this.blockNodeArr.length <= 0) {\r\n            let blockNode: cc.Node = cc.instantiate(this.blockPrefab);\r\n            cc.log(\"=======================get new block\");\r\n            return blockNode;\r\n        }\r\n\r\n        let blockNode = this.blockNodeArr.pop();\r\n        //blockNode.removeFromParent(false);\r\n        cc.log(\"=======================get pool block\");\r\n        return blockNode;\r\n    }\r\n\r\n    pushBlock(blockNode: cc.Node) {\r\n        //blockNode.active = false;\r\n        //this.parentNode.addChild(blockNode);\r\n        this.blockNodeArr.push(blockNode);\r\n    }\r\n\r\n    //注意，BlockNodePool是要替换成你自己实现的子类 这里没有实际的作用\r\n    private static instance:BlockNodePool;\r\n    /**\r\n     * 获取实例的静态方法实例\r\n     * @return\r\n     *\r\n     */\r\n    public static getInstance():BlockNodePool\r\n    {\r\n        if(!this.instance)\r\n        {\r\n            this.instance = new BlockNodePool();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    public destroy() {\r\n        this.blockNodeArr.splice(0,this.blockNodeArr.length);\r\n    }\r\n}"]}