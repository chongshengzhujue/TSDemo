{"version":3,"sources":["BlockNodePool.ts"],"names":[],"mappings":";;;;;AAEA;IAQI;IAEA,CAAC;IAED,gCAAQ,GAAR,UAAS,WAAuB,EAAE,OAAgB;QAC9C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;QAChC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEjD,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC;YAC9B,IAAI,SAAS,GAAY,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YACrD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACtC,CAAC;IACL,CAAC;IAED,gCAAQ,GAAR;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,WAAS,GAAY,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC1D,EAAE,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YAC/C,MAAM,CAAC,WAAS,CAAC;QACrB,CAAC;QAED,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;QACxC,oCAAoC;QACpC,EAAE,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAED,iCAAS,GAAT,UAAU,SAAkB;QACxB,2BAA2B;QAC3B,sCAAsC;QACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAID;;;;OAIG;IACW,yBAAW,GAAzB;QAEI,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAClB,CAAC;YACG,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAC;QACxC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEM,+BAAO,GAAd;QACI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACzD,CAAC;IACL,oBAAC;AAAD,CA9DA,AA8DC,IAAA","file":"","sourceRoot":"../../../../../../assets/scripts/viewCtrl/GameView","sourcesContent":["\n\nexport default class BlockNodePool {\n\n    blockNodeArr : cc.Node[];\n\n    blockPrefab : cc.Prefab;\n\n    parentNode : cc.Node;\n\n    constructor() {\n        \n    }\n\n    initPool(blockPrefab : cc.Prefab, initNum : number) {\n        this.blockPrefab = blockPrefab;\n        this.blockNodeArr = new Array();\n        this.parentNode = new cc.Node();\n        cc.director.getScene().addChild(this.parentNode);\n\n        for(let i = 0; i < initNum; i++) {\n            let blockNode: cc.Node = cc.instantiate(blockPrefab);\n            this.blockNodeArr.push(blockNode);\n        }\n    }\n\n    getBlock(): cc.Node {\n        if (this.blockNodeArr.length <= 0) {\n            let blockNode: cc.Node = cc.instantiate(this.blockPrefab);\n            cc.log(\"=======================get new block\");\n            return blockNode;\n        }\n\n        let blockNode = this.blockNodeArr.pop();\n        //blockNode.removeFromParent(false);\n        cc.log(\"=======================get pool block\");\n        return blockNode;\n    }\n\n    pushBlock(blockNode: cc.Node) {\n        //blockNode.active = false;\n        //this.parentNode.addChild(blockNode);\n        this.blockNodeArr.push(blockNode);\n    }\n\n    //注意，BlockNodePool是要替换成你自己实现的子类 这里没有实际的作用\n    private static instance:BlockNodePool;\n    /**\n     * 获取实例的静态方法实例\n     * @return\n     *\n     */\n    public static getInstance():BlockNodePool\n    {\n        if(!this.instance)\n        {\n            this.instance = new BlockNodePool();\n        }\n        return this.instance;\n    }\n\n    public destroy() {\n        this.blockNodeArr.splice(0,this.blockNodeArr.length);\n    }\n}"]}