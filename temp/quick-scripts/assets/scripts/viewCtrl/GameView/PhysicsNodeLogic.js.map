{"version":3,"sources":["physicsNodeLogic.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\viewCtrl\\GameView","sourcesContent":["import UserComponent from \"../Base/UserComponent\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/typescript/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\nlet talefun = (<any>cc).talefun;\r\n\r\nimport MyPhysicsCollider = require(\"./MyPhysicsCollider\")\r\n\r\n@ccclass\r\nexport default class physicsNodeLogic extends UserComponent {\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    touchStartHandler: () => void;\r\n    touchMoveHandler: () => void;\r\n    touchEndHandler: () => void;\r\n    touchCancelHandler: () => void;\r\n\r\n    path: cc.Graphics = null;\r\n\r\n    points: cc.Vec2[] = [];\r\n\r\n    physicsChain: MyPhysicsCollider = null;\r\n\r\n    rigibodyLogic: cc.RigidBody = null;\r\n\r\n    onLoad () {\r\n        \r\n    }\r\n\r\n    onEnter() {\r\n        if((<any>this.node).viewCtrl)\r\n        {\r\n            this.viewCtrl = (<any>this.node).viewCtrl;\r\n        }\r\n\r\n        this.path = this.addComponent(cc.Graphics);\r\n        this.path.strokeColor = cc.color(255, 0, 0);\r\n        this.path.lineWidth = 4;\r\n\r\n        this.rigibodyLogic = this.getComponent(cc.RigidBody);\r\n        this.physicsChain = this.getComponent(\"MyPhysicsCollider\");\r\n        talefun.LogHelper.log(\"onEnter :\" + \"LogoViewLogic\");\r\n        this.rigibodyLogic.active = false;\r\n\r\n        this.touchStartHandler = this.touchStart.bind(this);\r\n        this.touchMoveHandler = this.touchMove.bind(this);\r\n        this.touchEndHandler = this.touchEnd.bind(this);\r\n        this.touchCancelHandler = this.touchCancel.bind(this);\r\n\r\n        this.addTouch();\r\n    }\r\n\r\n    onExit() {\r\n        this.removeTouch();\r\n    }\r\n\r\n    addTouch() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStartHandler);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveHandler);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEndHandler);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchCancelHandler);\r\n    }\r\n\r\n    removeTouch() {\r\n        this.node.off(cc.Node.EventType.TOUCH_START, this.touchStartHandler);\r\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMoveHandler);\r\n        this.node.off(cc.Node.EventType.TOUCH_END, this.touchEndHandler);\r\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchCancelHandler);\r\n    }\r\n\r\n    touchStart(event : cc.Event.EventTouch) {\r\n        let touchLoc = event.getLocation();\r\n        touchLoc = this.node.parent.convertToNodeSpaceAR(touchLoc);\r\n\r\n        this.points.push(touchLoc);\r\n        this.path.moveTo(touchLoc.x, touchLoc.y);\r\n        return true;\r\n    }\r\n\r\n    touchMove(event : cc.Event.EventTouch) {\r\n        let touchLoc = event.getLocation();\r\n        touchLoc = this.node.parent.convertToNodeSpaceAR(touchLoc);\r\n        if (this.checkIsCanDraw(this.points[this.points.length - 1], touchLoc)) {\r\n            this.points.push(touchLoc);\r\n            this.path.lineTo(touchLoc.x, touchLoc.y);\r\n            // this.path.moveTo(touchLoc.x, touchLoc.y);\r\n            this.path.stroke();\r\n        }\r\n    }\r\n\r\n    touchEnd(event : cc.Event.EventTouch) {\r\n        // let touchLoc = event.getLocation();\r\n        // touchLoc = this.node.parent.convertToNodeSpaceAR(touchLoc);\r\n        // this.path.lineTo(touchLoc.x, touchLoc.y);\r\n        // this.path.stroke();\r\n        // this.points.push(touchLoc);\r\n        this.createRigibody();\r\n    }\r\n\r\n    touchCancel(event : cc.Event.EventTouch) {\r\n        \r\n    }\r\n\r\n    checkIsCanDraw(lastPoint: cc.Vec2, nowPoint: cc.Vec2) {\r\n        return cc.pDistance(lastPoint, nowPoint) >= 20;\r\n    }\r\n\r\n    parsePathString(pathStr) {\r\n        var pathList = pathStr.split(\" \");\r\n        let bezieConfig = {\r\n            beginPos: cc.p(0, 0),\r\n            control1: cc.p(0, 0),\r\n            control2: cc.p(0, 0),\r\n            endPos: cc.p(0, 0),\r\n        };\r\n\r\n        for (let i = 0, len = pathList.length; i < len; i++) {\r\n            if (pathList[i] === \"C\") {\r\n                bezieConfig.beginPos.x = parseFloat(pathList[i - 2]);\r\n                bezieConfig.beginPos.y = parseFloat(pathList[i - 1]);\r\n                bezieConfig.control1.x = parseFloat(pathList[i + 1]);\r\n                bezieConfig.control1.y = parseFloat(pathList[i + 2]);\r\n                bezieConfig.control2.x = parseFloat(pathList[i + 3]);\r\n                bezieConfig.control2.y = parseFloat(pathList[i + 4]);\r\n                bezieConfig.endPos.x = parseFloat(pathList[i + 5]);\r\n                bezieConfig.endPos.y = parseFloat(pathList[i + 6]);\r\n\r\n            }\r\n        }\r\n        cc.log(\"zhangyakun\" + JSON.stringify(pathList));\r\n    }\r\n\r\n    createRigibody() {\r\n        this.rigibodyLogic.active = true;\r\n        // let posArr = [];\r\n        // for (let i = 0; i < this.points.length - 1; i++) {\r\n        //     let beginPos = this.points[i];\r\n        //     let endPos = this.points[i + 1];\r\n        //     let posGroup = this.getSegmenPos(beginPos, endPos);\r\n\r\n        //     if (i === 0) {\r\n        //         posArr.splice(0, 0, posGroup.beginPosArr[0]);\r\n        //         posArr.push(posGroup.endPosArr[0]);\r\n        //     }\r\n\r\n        //     posArr.splice(0, 0, posGroup.beginPosArr[1]);\r\n        //     posArr.push(posGroup.endPosArr[1]);\r\n        // }\r\n        // this.path.lineWidth = 2;\r\n        // this.path.strokeColor = cc.color(0, 255, 0);\r\n        // this.path.moveTo(this.points[0]);\r\n        // for (let i in this.points) {\r\n        //     this.path.lineTo(this.points[i].x, this.points[i].y);\r\n        // }\r\n        // this.path.stroke();\r\n        this.physicsChain.lineWidth = this.path.lineWidth;\r\n        this.physicsChain.points = this.points;\r\n        this.physicsChain.apply();\r\n\r\n    }\r\n\r\n    getSegmenPos(beginPos: cc.Vec2, endPos: cc.Vec2) {\r\n        let k = (endPos.y - beginPos.y) / (endPos.x - beginPos.x);\r\n        let offX = 0;\r\n        let offY = 0;\r\n        if (k === 0) {\r\n            offY = this.path.lineWidth / 2;\r\n            offX = 0;\r\n\r\n            if (endPos.x < beginPos.x) {\r\n                offX = -offX;\r\n                offY = -offY;\r\n            }\r\n        }\r\n        else if (!isFinite(k)) {\r\n            offX = this.path.lineWidth / 2;\r\n            offY = 0;\r\n        } else {\r\n            let k1 = -1 / k;\r\n\r\n            let angle = Math.atan(k1);\r\n            let sin = Math.sin(angle);\r\n            let cos = Math.cos(angle);\r\n            cc.log(\"angle\" + angle);\r\n\r\n            offX = this.path.lineWidth / 2 * cos;\r\n            offY = this.path.lineWidth / 2 * sin;\r\n        }\r\n\r\n        if (endPos.y > beginPos.y) {\r\n            offX = -offX;\r\n            offY = -offY;\r\n        }\r\n\r\n        let beingPosArr = [cc.p(beginPos.x - offX, beginPos.y - offY), cc.p(endPos.x - offX, endPos.y - offY)];\r\n        let endPosArr = [cc.p(beginPos.x + offX, beginPos.y + offY), cc.p(endPos.x + offX, endPos.y + offY)];\r\n\r\n        return {\r\n            beginPosArr : beingPosArr,\r\n            endPosArr : endPosArr\r\n        };\r\n    }\r\n\r\n\r\n}\r\n"]}